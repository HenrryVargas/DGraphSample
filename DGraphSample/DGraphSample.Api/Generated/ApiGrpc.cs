// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/api.proto
// </auto-generated>
// Original file comments:
//
// Copyright (C) 2017 Dgraph Labs, Inc. and Contributors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Style guide for Protocol Buffer 3.
// Use CamelCase (with an initial capital) for message names – for example,
// SongServerRequest. Use underscore_separated_names for field names – for
// example, song_name.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace DGraphSample.Api.Generated {
  /// <summary>
  /// Graph response.
  /// </summary>
  public static partial class Dgraph
  {
    static readonly string __ServiceName = "api.Dgraph";

    static readonly grpc::Marshaller<DGraphSample.Api.Generated.LoginRequest> __Marshaller_api_LoginRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.LoginRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.Response> __Marshaller_api_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.Request> __Marshaller_api_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.Mutation> __Marshaller_api_Mutation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.Mutation.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.Assigned> __Marshaller_api_Assigned = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.Assigned.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.Operation> __Marshaller_api_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.Payload> __Marshaller_api_Payload = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.Payload.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.TxnContext> __Marshaller_api_TxnContext = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.TxnContext.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.Check> __Marshaller_api_Check = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.Check.Parser.ParseFrom);
    static readonly grpc::Marshaller<DGraphSample.Api.Generated.Version> __Marshaller_api_Version = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), DGraphSample.Api.Generated.Version.Parser.ParseFrom);

    static readonly grpc::Method<DGraphSample.Api.Generated.LoginRequest, DGraphSample.Api.Generated.Response> __Method_Login = new grpc::Method<DGraphSample.Api.Generated.LoginRequest, DGraphSample.Api.Generated.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_api_LoginRequest,
        __Marshaller_api_Response);

    static readonly grpc::Method<DGraphSample.Api.Generated.Request, DGraphSample.Api.Generated.Response> __Method_Query = new grpc::Method<DGraphSample.Api.Generated.Request, DGraphSample.Api.Generated.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Query",
        __Marshaller_api_Request,
        __Marshaller_api_Response);

    static readonly grpc::Method<DGraphSample.Api.Generated.Mutation, DGraphSample.Api.Generated.Assigned> __Method_Mutate = new grpc::Method<DGraphSample.Api.Generated.Mutation, DGraphSample.Api.Generated.Assigned>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Mutate",
        __Marshaller_api_Mutation,
        __Marshaller_api_Assigned);

    static readonly grpc::Method<DGraphSample.Api.Generated.Operation, DGraphSample.Api.Generated.Payload> __Method_Alter = new grpc::Method<DGraphSample.Api.Generated.Operation, DGraphSample.Api.Generated.Payload>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Alter",
        __Marshaller_api_Operation,
        __Marshaller_api_Payload);

    static readonly grpc::Method<DGraphSample.Api.Generated.TxnContext, DGraphSample.Api.Generated.TxnContext> __Method_CommitOrAbort = new grpc::Method<DGraphSample.Api.Generated.TxnContext, DGraphSample.Api.Generated.TxnContext>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CommitOrAbort",
        __Marshaller_api_TxnContext,
        __Marshaller_api_TxnContext);

    static readonly grpc::Method<DGraphSample.Api.Generated.Check, DGraphSample.Api.Generated.Version> __Method_CheckVersion = new grpc::Method<DGraphSample.Api.Generated.Check, DGraphSample.Api.Generated.Version>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckVersion",
        __Marshaller_api_Check,
        __Marshaller_api_Version);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return DGraphSample.Api.Generated.ApiReflection.Descriptor.Services[0]; }
    }

    /// <summary>Lite client for Dgraph</summary>
    public partial class DgraphClient : grpc::LiteClientBase
    {
      /// <summary>Creates a new client for Dgraph that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DgraphClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DgraphClient() : base()
      {
      }

      public virtual DGraphSample.Api.Generated.Response Login(DGraphSample.Api.Generated.LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual DGraphSample.Api.Generated.Response Login(DGraphSample.Api.Generated.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Response> LoginAsync(DGraphSample.Api.Generated.LoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Response> LoginAsync(DGraphSample.Api.Generated.LoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      public virtual DGraphSample.Api.Generated.Response Query(DGraphSample.Api.Generated.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Query(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual DGraphSample.Api.Generated.Response Query(DGraphSample.Api.Generated.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Query, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Response> QueryAsync(DGraphSample.Api.Generated.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Response> QueryAsync(DGraphSample.Api.Generated.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Query, null, options, request);
      }
      public virtual DGraphSample.Api.Generated.Assigned Mutate(DGraphSample.Api.Generated.Mutation request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Mutate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual DGraphSample.Api.Generated.Assigned Mutate(DGraphSample.Api.Generated.Mutation request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Mutate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Assigned> MutateAsync(DGraphSample.Api.Generated.Mutation request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MutateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Assigned> MutateAsync(DGraphSample.Api.Generated.Mutation request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Mutate, null, options, request);
      }
      public virtual DGraphSample.Api.Generated.Payload Alter(DGraphSample.Api.Generated.Operation request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Alter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual DGraphSample.Api.Generated.Payload Alter(DGraphSample.Api.Generated.Operation request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Alter, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Payload> AlterAsync(DGraphSample.Api.Generated.Operation request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AlterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Payload> AlterAsync(DGraphSample.Api.Generated.Operation request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Alter, null, options, request);
      }
      public virtual DGraphSample.Api.Generated.TxnContext CommitOrAbort(DGraphSample.Api.Generated.TxnContext request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommitOrAbort(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual DGraphSample.Api.Generated.TxnContext CommitOrAbort(DGraphSample.Api.Generated.TxnContext request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CommitOrAbort, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.TxnContext> CommitOrAbortAsync(DGraphSample.Api.Generated.TxnContext request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommitOrAbortAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.TxnContext> CommitOrAbortAsync(DGraphSample.Api.Generated.TxnContext request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CommitOrAbort, null, options, request);
      }
      public virtual DGraphSample.Api.Generated.Version CheckVersion(DGraphSample.Api.Generated.Check request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual DGraphSample.Api.Generated.Version CheckVersion(DGraphSample.Api.Generated.Check request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckVersion, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Version> CheckVersionAsync(DGraphSample.Api.Generated.Check request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<DGraphSample.Api.Generated.Version> CheckVersionAsync(DGraphSample.Api.Generated.Check request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckVersion, null, options, request);
      }
    }

  }
}
#endregion
